openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API documentation for managing users and authentication.
servers:
  - url: http://localhost:5000
    description: Local server
paths:
  /api/users/register:
    post:
      summary: Register a new user
      description: Register a new user with their details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "johndoe"
                email:
                  type: string
                  example: "johndoe@example.com"
                phone:
                  type: string
                  example: "9999999999"
                password:
                  type: string
                  example: "Pa$$w0rd"
      responses:
        '201':
          description: User registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "68026bf363f31ddf6eafbaa8"
                  password:
                    type: string
                    example: "johndoe"
        '400':
          description: Invalid input.
  /api/users/login:
    post:
      summary: Login a user
      description: Authenticate a user and return a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "johndoe@example.com"
                password:
                  type: string
                  example: "Pa$$w0rd"
      responses:
        '200':
          description: User logged in successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid credentials.
  /api/users:
    get:
      summary: Get all users
      description: Retrieve a list of all users.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "68026bf363f31ddf6eafbaa8"
                        name:
                          type: string
                          example: "John Doe"
                        phone:
                          type: string
                          example: "9999999999"
  /api/users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a single user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user.
          schema:
            type: string
      responses:
        '200':
          description: User details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "68026bf363f31ddf6eafbaa8"
                      name:
                        type: string
                        example: "John Doe"
                      phone:
                        type: string
                        example: "9999999999"
        '404':
          description: User not found.
    put:
      summary: Update user by ID
      description: Update the details of a user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "68026bf363f31ddf6eafbaa8"
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "johndoe@example.com"
                phone:
                  type: string
                  example: "9999999999"
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "68026bf363f31ddf6eafbaa8"
                      name:
                        type: string
                        example: "John Doe"
                      email:
                        type: string
                        example: "johndoe@example.com"
                      phone:
                        type: string
                        example: "9999999999"
        '404':
          description: User not found.
    delete:
      summary: Delete user by ID
      description: Delete a user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user.
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "User deleted"
                      id:
                        type: string
                        example: "68026bf363f31ddf6eafbaa8"
        '404':
          description: User not found.